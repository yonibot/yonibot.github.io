<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | YONI]]></title>
  <link href="http://yonibot.github.io/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://yonibot.github.io/"/>
  <updated>2013-10-30T15:23:37+02:00</updated>
  <id>http://yonibot.github.io/</id>
  <author>
    <name><![CDATA[Yoni]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Testing is not bad at all]]></title>
    <link href="http://yonibot.github.io/blog/2013/07/05/testing-is-not-bad-at-all/"/>
    <updated>2013-07-05T15:22:00+03:00</updated>
    <id>http://yonibot.github.io/blog/2013/07/05/testing-is-not-bad-at-all</id>
    <content type="html"><![CDATA[<p>Last week I bought the &ldquo;<a href="https://leanpub.com/everydayrailsrspec">Everyday Rails Testing with Rspec</a>&rdquo; book by Aaron Sumner for the third Ruby on Rails course by the TeaLeaf Academy (which, by the way, is a lot of fun!). I expected testing to be a bit of a chore, but it turns out that I&rsquo;m actually enjoying it.</p>

<p>The course introduces testing very gradually, so that in each exercise you just focus on one or two tests. It&rsquo;s basically breaking up a new skill into edible chunks so that you can really focus on each chunk and process it properly until you understand it. Testing presents kind of a fun brain challenge, figuring out exactly which cases you want to test for and how to most accurately test for these cases, and at the same time it gives you a better understanding of what&rsquo;s going on in your own app.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[find_by versus find in Rails]]></title>
    <link href="http://yonibot.github.io/blog/2013/06/10/find-by-versus-find-in-rails/"/>
    <updated>2013-06-10T15:13:00+03:00</updated>
    <id>http://yonibot.github.io/blog/2013/06/10/find-by-versus-find-in-rails</id>
    <content type="html"><![CDATA[<p><em>Edit: This article is a bit dated, since Rails 3 prefers the <strong>where</strong> method to the <strong>find </strong>method.</em></p>

<p>Rails has a number of distinct ways to find ActiveRecord objects by id. They are:</p>

<p>Object<strong>.find(id)</strong></p>

<p>Object<strong>.find_by_id(id)</strong></p>

<p>Object<strong>.find_all_by_id(id)</strong></p>

<p>How do you know which one to use? Does it matter?</p>

<p>I found that all 3 methods have their own unique properties, and can be used when you&rsquo;re looking for specific types of results. The differences can be expressed as follows:</p>

<ol>
<li><strong>Returning an ActiveRecord error </strong><strong>or nil - </strong>The basic &lsquo;find&rsquo; method throws an ActiveRecord::RecordNotFound error if you input an id that does not correspond to object. The other two methods return nil.</li>
</ol>


<p>2. <strong>Whether multiple objects can be returned</strong> &ndash; The &lsquo;find_by&rsquo; syntax only returns a single object. In contrast, the &lsquo;find&rsquo; and &lsquo;find_all_by_&rsquo; can return multiple objects. If you input multiple id&rsquo;s into a find_by method, it will simply return the first result.<strong>
</strong></p>

<p>3. <strong>Whether objects are always returned as an array &ndash;</strong> For the &lsquo;find_all_by&rsquo; method, the value is always returned in an array &ndash; even if the result is a single object.</p>

<p>In summary:</p>

<table style="background-color:#ffffcc;" width="100%" border="1" cellspacing="1" cellpadding="3">
<tbody>
<tr>
<td><span style="text-decoration:underline;">Method</span> / <span style="text-decoration:underline;">Result</span></td>
<td style="text-align:center;">**Error or Nil?**</td>
<td style="text-align:center;">**Number of Objects it can Return**</td>
<td style="text-align:center;">**Always returns an array?**</td>
</tr>
<tr>
<td>**.find**</td>
<td>ActiveRecord error</td>
<td>Multiple</td>
<td>No</td>
</tr>
<tr>
<td>**.find_by**_</td>
<td>nil</td>
<td>Single</td>
<td>No</td>
</tr>
<tr>
<td>**.find_all_by_**</td>
<td>nil</td>
<td>Multiple</td>
<td>Yes, even for a single object.</td>
</tr>
</tbody>
</table>


<p><a href="http://www.quackit.com/html/html_table_tutorial.cfm"> </a></p>
]]></content>
  </entry>
  
</feed>
